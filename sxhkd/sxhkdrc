# Bspwm {{{

# Focus node
# If no window exist, target monitor/desktop instead
super + k
  bspc node -f north || bspc monitor -f north
super + j
  bspc node -f south || bspc monitor -f south
super + h
  bspc node -f west || bspc monitor -f west || bspc desktop -f west
super + l
  bspc node -f east || bspc monitor -f east || bspc desktop -f east

# Swap node
# If no node exist, send node to monitor instead
super + shift + h
  if ! bspc node -s west.local; then bspc node -m west && bspc node $(bspc query -N -n last) -f; fi
super + shift + l
  if ! bspc node -s east.local; then bspc node -m east && bspc node $(bspc query -N -n last) -f; fi
super + shift + k
  if ! bspc node -s north.local; then bspc node -m north && bspc node $(bspc query -N -n last) -f; fi
super + shift + j
  if ! bspc node -s south.local; then bspc node -m south && bspc node $(bspc query -N -n last) -f; fi

# Focus desktop / transfer node to desktop
super + {1-9,0}
    bspc desktop -f focused:^{1-9,10}
super + shift + {1-9,0}
    bspc node -d focused:^{1-9,10}

# Focus the previous / next desktop (occupied)
alt + button{1,3}
    bspc desktop -f {prev,next} occupied

# Toggle fullscreen/floating/sticky state
super + shift + f
    bspc node -t \~fullscreen
super + space
    bspc node -t \~floating || bspc node -t \~tiled
super + shift + space
    bspc node -g sticky && notify-send "Toggled sticky state"

# Close/kill current window
super + {_,shift + }q
    bspc node -{c,k}

# Swap the current node with the biggest node
super + s
    bspc node -s biggest

# Rotate the tree that the current window belongs to
super + {_,shift + }c
    bspc node @parent -R {90,270}

# Focus on the clicked node
~button1
    bspc pointer -g focus

super + button{1-3}
    bspc pointer -g {move,resize_side,resize_corner}

super + @button{1-3}
    bspc pointer -u

# Balance the size of all nodes in the current desktop
super + b
  bspc desktop -B

# Resize current window
super + r : {_,shift + ,super + ,shift + super + }h
    val={200,100,50,10}; bspc node @west -r -${val} || bspc node @east -r -${val}
super + r : {_,shift + ,super + ,shift + super + }l
    val={200,100,50,10}; bspc node @west -r +${val} || bspc node @east -r +${val}
super + r : {_,shift + ,super + ,shift + super + }k
    val={200,100,50,10}; bspc node @north -r -${val} || bspc node @south -r -${val}
super + r : {_,shift + ,super + ,shift + super + }j
    val={200,100,50,10}; bspc node @north -r +${val} || bspc node @south -r +${val}

# Set splitting area
super + ctrl + {h,j,k,l}
    bspc node -p ~{west,south,north,east}

# Adjust splitting ratio
super + {minus,equal}
    bspc node -r $(bspwm_noderatio {+10,-10})

# Clear splitting indication
super + ctrl + space
    bspc node -p cancel

# Clear splitting indicators for all nodes on the focused desktop
super + ctrl + shift + space
    bspc query -N | xargs -I id -n 1 bspc node id -p cancel

# }}}
# Application launcher{{{

# Launch app
super + d
    rofi -modi drun -show

# Launch terminal
super + Return
    st

# Launch terminal with root privileges
super + shift + Return
    sudo st

# Web browser
super + w
    chromium

# File browser
super + a
    st -e fff $HOME

# File browser with root privileges
super + shift + a
    st -e sudo fff $HOME

# WiFi AP selection menu
super + shift + w
    sudo nmtui

# Music player
super + m
    st -e ncmpcpp

# }}}
# Fn Controls {{{

# Change to next or previous in the mpd playlist
XF86Audio{Next,Prev}
	mpc -q {next,prev}

# Raise or lower volume
XF86Audio{Raise,Lower}Volume
	pactl set-sink-volume 0 {+5,-5}%

# Toggle mute state of volume
XF86AudioMute
	pactl set-sink-mute 0 toggle

# Screenshot the current desktop
{shift + ,_} Print
	scrot {--select,_} -z --quality 100 "%F_%H-%M-%S_$wx$h.png" -e 'mv $f ~/Pictures/scrot/' && notify-send 'Screenshot captured'

# Raise or lower display brightness
XF86MonBrightness{Down,Up}
	xbacklight {-dec,-inc} 5

# }}}
